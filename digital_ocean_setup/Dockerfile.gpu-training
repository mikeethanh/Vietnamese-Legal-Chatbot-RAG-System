# GPU Training Dockerfile - Optimized for NVIDIA V100
FROM nvidia/cuda:11.8-devel-ubuntu22.04

# Set non-interactive frontend
ENV DEBIAN_FRONTEND=noninteractive

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3.10 \
    python3.10-pip \
    python3.10-venv \
    git \
    curl \
    wget \
    build-essential \
    software-properties-common \
    && rm -rf /var/lib/apt/lists/*

# Create symbolic links
RUN ln -sf /usr/bin/python3.10 /usr/bin/python
RUN ln -sf /usr/bin/pip3 /usr/bin/pip

# Upgrade pip
RUN python -m pip install --upgrade pip

# Install PyTorch with CUDA support
RUN pip install --no-cache-dir torch==2.0.1+cu118 torchvision==0.15.2+cu118 torchaudio==2.0.2+cu118 \
    --index-url https://download.pytorch.org/whl/cu118

# Copy requirements v√† install other dependencies
COPY requirements_gpu.txt .
RUN pip install --no-cache-dir -r requirements_gpu.txt

# Copy training scripts
COPY train_embedding_gpu.py .
COPY embedding_adapter.py .

# Create directories
RUN mkdir -p /tmp/data /tmp/model /tmp/logs

# Set environment variables for GPU optimization
ENV PYTHONPATH=/app
ENV TOKENIZERS_PARALLELISM=false
ENV CUDA_VISIBLE_DEVICES=0
ENV PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512
ENV CUDA_LAUNCH_BLOCKING=0

# GPU memory optimization
ENV CUDA_MEMORY_FRACTION=0.9

# Default command
CMD ["python", "train_embedding_gpu.py"]