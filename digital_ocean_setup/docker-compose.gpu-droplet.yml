version: '3.8'

services:
  gpu-training:
    build:
      context: .
      dockerfile: Dockerfile.gpu-training
    container_name: vietnamese-legal-training
    
    # GPU Access
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    
    # Environment
    env_file:
      - .env
    
    # Volumes for persistence
    volumes:
      - ./models:/app/models
      - ./data:/app/data
      - ./logs:/app/logs
      - /tmp/.X11-unix:/tmp/.X11-unix:ro
    
    # Ports for monitoring
    ports:
      - "8888:8888"  # Jupyter Lab
      - "6006:6006"  # TensorBoard
      - "5000:5000"  # API server
    
    # Keep container running
    tty: true
    stdin_open: true
    
    # Restart policy
    restart: unless-stopped
    
    # Resource limits (adjust based on your droplet)
    # H100: 80GB VRAM, H200: 141GB VRAM
    shm_size: 16gb
    
    # Command
    command: >
      bash -c "
        echo 'ðŸš€ Starting GPU Training Container...'
        
        # Setup monitoring
        pip install jupyterlab tensorboard
        
        # Start Jupyter Lab in background
        nohup jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token='' --NotebookApp.password='' &
        
        # Start training
        python3 train_embedding_gpu.py
      "

  # Optional: Monitoring container
  monitoring:
    image: nvidia/cuda:11.8-runtime-ubuntu22.04
    container_name: gpu-monitor
    
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    
    volumes:
      - ./logs:/logs
    
    command: >
      bash -c "
        apt update && apt install -y python3-pip htop
        pip3 install gpustat
        
        while true; do
          echo '=== GPU Status ===' > /logs/gpu_status.log
          nvidia-smi >> /logs/gpu_status.log 2>&1
          echo '' >> /logs/gpu_status.log
          gpustat >> /logs/gpu_status.log 2>&1
          sleep 30
        done
      "
    
    restart: unless-stopped