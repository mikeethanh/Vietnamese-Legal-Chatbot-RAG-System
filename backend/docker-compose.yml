version: '3.8'

networks:
  internal-network:
    name: internal-network
    external: true

services:
  chatbot-api:
    build: .
    hostname: chatbot-api
    container_name: chatbot-api
    command: uvicorn app:app --host 0.0.0.0 --port 8000 --workers 2 --log-level info
    restart: always
    env_file:
      - .env
    environment:
      - DEBUG=False
    volumes:
      - .:/usr/src/app/
    ports:
      - 8000:8000
    networks:
      - internal-network

  chatbot-worker:
    build: .
    hostname: chatbot-worker
    container_name: chatbot-worker
    command: celery -A tasks.celery_app worker --loglevel=debug --logfile=/var/logs/celery.log
    restart: always
    env_file:
      - .env
    environment:
      - DEBUG=False
    volumes:
      - .:/usr/src/app
      - worker_volume:/var/logs/
    networks:
      - internal-network

  valkey-db:
    image: 'valkey/valkey:bookworm'
    hostname: valkey-db
    container_name: valkey-db
    restart: always
    ports:
      - "6379:6379"
    command:
      - '--save 60 1'
    volumes:
      - valkey_data:/data
    networks:
      - internal-network

  qdrant-db:
    image: qdrant/qdrant:latest
    hostname: qdrant-db
    container_name: qdrant-db
    restart: always
    ports:
      - "6333:6333"
      - "6334:6334"
    expose:
      - 6333
      - 6334
      - 6335
    configs:
      - source: qdrant_config
        target: /qdrant/config/production.yaml
    volumes:
      - qdrant_volume:/qdrant/storage
    networks:
      - internal-network

configs:
  qdrant_config:
    content: |
      log_level: INFO      

volumes:
  worker_volume:
  valkey_data:
  qdrant_volume:
